#configure the system to be live
---
- name: Install live-boot packages and haveged.
  apt:
    name: "{{ packages }}"
    install_recommends: no
  vars:
    packages:
    - live-boot
    - haveged

- name: Create a folder for ifup@.service and networking.service
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/etc/systemd/system/ifup@.service.d/"
    - "/etc/systemd/system/networking.service.d/"
  when: ansible_distribution == 'Debian'

- name: Override default networking and ifup configuration. Now Debian won't disconnect before shutting down.
  copy:
    src: "{{ role_path }}/files/etc/systemd/system/networking.service.d/override.conf"
    dest: "{{ item }}"
    mode: 0644
  with_items:
    - "/etc/systemd/system/networking.service.d/override.conf"
    - "/etc/systemd/system/ifup@.service.d/override.conf"
  when: ansible_distribution == 'Debian'

- name: Dont save systemd journal. This is a live system we dont need it.
  replace:
    dest: /etc/systemd/journald.conf
    regexp: '#Storage=auto'
    replace: 'Storage=none'

#our systems name will be its mac address
- name: Copy getnamebymac script
  copy:
    src: "{{ role_path }}/files/usr/local/bin/getnamebymac"
    dest: "/usr/local/bin/getnamebymac"
    mode: 0755

- name: Copy getnamebymac service.
  copy:
    src: "{{ role_path }}/files/etc/systemd/system/getnamebymac.service"
    dest: "/etc/systemd/system/getnamebymac.service"
    mode: 0644

- name: Enable getnamebymac service.
  file:
    src: /etc/systemd/system/getnamebymac.service
    dest: /etc/systemd/system/multi-user.target.wants/getnamebymac.service
    state: link

- name: Don't auto update apt
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/etc/systemd/system/timers.target.wants/apt-daily.timer"
    - "/etc/systemd/system/timers.target.wants/apt-daily-upgrade.timer"

#ln -s /lib/systemd/system/apt-daily.timer /etc/systemd/system/timers.target.wants/apt-daily.timer
#ln -s /lib/systemd/system/apt-daily-upgrade.timer /etc/systemd/system/timers.target.wants/apt-daily-upgrade.timer

#those two tasks prepare the live system to be installable to the hard disk
- name: Install needed programs.
  apt:
    name: "{{ packages }}"
    install_recommends: no
  vars:
    packages:
    - pv
    - squashfs-tools
    - parted

- name: Copy installers
  copy:
    src: "{{ role_path }}/files/usr/local/sbin/{{ item }}"
    dest: "/usr/local/sbin/{{ item }}"
    mode: 0755
  with_items:
     - format_newinstall
     - format_update

- name: Copy basic syslinux_local.cfg
  copy:
    src: "{{ role_path }}/files/root/syslinux_local.cfg"
    dest: "/root/syslinux_local.cfg"
    mode: 0644

- name: Let NetworkManager manage all devices on this system. Ubuntu.
  copy:
    src: "{{ role_path }}/files/etc/netplan/01-network-manager-all.yaml"
    dest: "/etc/netplan/01-network-manager-all.yaml"
    mode: 0644
  when: ansible_distribution == 'Ubuntu'

- name: Disable systemd-resolved service
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/etc/systemd/system/sysinit.target.wants/systemd-resolved.service"
    - "/etc/systemd/system/dbus-org.freedesktop.resolve1.service"
    - "/etc/resolv.conf"

#- name: Enable systemd-resolved service.
#  file:
#    src: "/lib/systemd/system/systemd-resolved.service"
#    dest: "{{ item }}"
#    state: link
#  with_items:
#    - "/etc/systemd/system/sysinit.target.wants/systemd-resolved.service"
#    - "/etc/systemd/system/dbus-org.freedesktop.resolve1.service"
