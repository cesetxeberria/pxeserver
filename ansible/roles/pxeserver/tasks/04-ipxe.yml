#install and configure ipxe for bios and uefi based clients. it will be downloaded from github and compiled with custom menu
---
- name: Install git & build-essential
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - git
    - build-essential
    - liblzma-dev

- name: Create ipxe directory
  file:
    path: "{{ tftp_root }}/ipxe"
    state: directory
    mode: 0755

- name: Prepare embed.ipxe
  template:
    src: "{{ role_path }}/templates/tftproot/ipxe/embed.j2"
    dest: "{{ tftp_root }}/ipxe/embed.ipxe"
    mode: 0644

- name: Prepare default.ipxe
  template:
    src: "{{ role_path }}/templates/tftproot/ipxe/default.j2"
    dest: "{{ tftp_root }}/ipxe/default.ipxe"
    mode: 0644

- name: Download ipxe from git
  git:
    repo: 'https://github.com/ipxe/ipxe'
    dest: "{{ tftp_root }}/ipxe/git"

- name: Check if undionly.kpxe exists
  stat:
    path: "{{ tftp_root }}/ipxe/undionly.kpxe"
  register: register_undionly

- name: Build undionly.kpxe. This may take a while.
  shell: cd {{ tftp_root }}/ipxe/git/src && make bin/undionly.kpxe EMBED={{ tftp_root }}/ipxe/embed.ipxe
  when: register_undionly.stat.exists == false

- name: Check if snponly.efi exists
  stat:
    path: "{{ tftp_root }}/ipxe/snponly.efi"
  register: register_snponly

- name: Build snponly.efi. This may take a while
  shell: cd {{ tftp_root }}/ipxe/git/src && make bin-x86_64-efi/snponly.efi EMBED={{ tftp_root }}/ipxe/embed.ipxe
  when: register_snponly.stat.exists == false

- name: Copy undionly.kpxe
  copy:
    src: "{{ tftp_root }}/ipxe/git/src/bin/undionly.kpxe"
    dest: "{{ tftp_root }}/ipxe/undionly.kpxe"
    mode: 0644
  when: register_undionly.stat.exists == false

- name: Copy snponly.efi
  copy:
    src: "{{ tftp_root }}/ipxe/git/src/bin-x86_64-efi/snponly.efi"
    dest: "{{ tftp_root }}/ipxe/snponly.efi"
    mode: 0644
  when: register_snponly.stat.exists == false

- name: Delete git files
  file:
    path: "{{ tftp_root }}/ipxe/git"
    state: absent
